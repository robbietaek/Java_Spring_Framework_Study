package aes;

import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/*
 * useraccount 테이블의 email 값을 읽어서
 * userbackup 테이블의 email을 암호화하기
 * key는 id의 해쉬값 문자열 앞 16자리로 정한다.
 */
public class CipherMain3 {
	public static void main(String[] args) throws Exception{
		Class.forName("org.mariadb.jdbc.Driver");
		Connection conn = DriverManager.getConnection("jdbc:mariadb://localhost:3306/classdb","scott","1234");
		PreparedStatement pstmt = conn.prepareStatement("select userid, email from useraccount");
		ResultSet rs = pstmt.executeQuery();
		while(rs.next()) {
			String id = rs.getString(1);
			String pass = rs.getString(2);
			MessageDigest md = MessageDigest.getInstance("SHA-256");
			String hashpass = "";
			byte[] plain = pass.getBytes();
			byte[] hash = md.digest(plain);
			for(byte b : hash) {
				hashpass += String.format("%02X", b);
			}
			String key = hashp;
			String cipher1 = CipherUtil.encrypt(plain1,key);
			pstmt.close();
			pstmt = conn.prepareStatement("update userbackup set password =? where userid = ?");
			pstmt.setString(1, hashpass);
			pstmt.setString(2, id);
			pstmt.execute();
		}
	}
}
